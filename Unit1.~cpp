//---------------------------------------------------------------------------

#include <vcl.h>
#include <cstdlib>
#include <cmath>
#include <limits>
#include <math.h>
#include <conio.h>
#include <fstream>
#include <iostream.h>
#include "ShellAPI.h"
#pragma hdrstop
#include <stdio.h>

#include "Unit1.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TForm1 *Form1;
//---------------------------------------------------------------------------
__fastcall TForm1::TForm1(TComponent* Owner)
        : TForm(Owner)
{
}
//---------------------------------------------------------------------------

void __fastcall TForm1::Button1Click(TObject *Sender)
{
   int k,l;

Series1->Clear();
Series2->Clear();
Series3->Clear();
Series4->Clear();
Series5->Clear();

   A=1;
   Rmax=0;
   d=0.00001;
   while(A>=0.5){
             FrequencyWSP();
             FrequencyWO();
             FrequencyP();
             OdEl();
             if(R1>Rmax){
                 Rmax=R1;
                 Amax=A;
                         }
              A=A-d;
                }
   A=Amax;
   FrequencyWSP();
   FrequencyWO();
   FrequencyP();
   OdEl();
   inclear();
   if(Amax<1){
      A=1;
      while(A>Amax){
           FrequencyWSP();
           FrequencyWO();
           FrequencyP();
           OdEl();
           MAXMIN();
           A=A-d;
                    }
               }
   A=Amax-d;
   while(A>=0.5){
           FrequencyWSP();
           FrequencyWO();
           FrequencyP();
           OdEl();
           MAXMIN();
           A=A-d;
                }
  MAXMIN1();
  for(k=0;k<Rb;k++){
        Wp3[k]=(Wpmax[k]+Wpmin[k])/2;
        Wp13[k]=((Wpmax[k]-Wp3[k])/Wp3[k])*100;
                   }
                   
  for(k=0;k<Rb;k++){
      Series4->AddXY(Wp3[k],Wp13[k],"",clBlack);
                   }
   l=0;

  Fz = fopen(str2.c_str(),"ab");
  myfile = fopen(str.c_str(), "w");

  if(Wp13[0]<Wp13[1])
                        {
                        Zap[l].s_y = Wp13[0];
                        Zap[l].s_x = Wp3[0];
                        Zap[l].s_nom = l;
                        fwrite(&Zap[l], size, 1, Fz); //записывам итый элемент в байтах
                        fprintf(myfile, "%lf %lf %d\n", Wp13[0], Wp3[0], l);
                        l=l+1;
                        }
  for(k=1;k<Rb-1;k++)
        if((Wp13[k]<Wp13[k-1]) && (Wp13[k]<Wp13[k+1]))
                        {
                        Zap[l].s_y = Wp13[k];
                        Zap[l].s_x = Wp3[k];
                        Zap[l].s_nom = l;
                        fwrite(&Zap[l], size, 1, Fz); //записывам итый элемент в байтах
                        fprintf(myfile, "%lf %lf %d\n", Wp13[k], Wp3[k], l);
                        l=l+1;
                        }
  if(Wp13[Rb-1]<Wp13[Rb-2])
                        {
                        Zap[l].s_y = Wp13[Rb-1];
                        Zap[l].s_x = Wp3[Rb-1];
                        Zap[l].s_nom = l;
                        fwrite(&Zap[l], size, 1, Fz); //записывам итый элемент в байтах
                        fprintf(myfile, "%lf %lf %d\n", Wp13[Rb-1], Wp3[Rb-1], l);
                        l=l+1;
                        }
   fclose(myfile);
   fclose(Fz);

}
//---------------------------------------------------------------------------

void __fastcall TForm1::Button2Click(TObject *Sender)
{
double Fgmin, Fgmax, dFg, Fo, Fbmin, Fbmax, Fbomin, Fomin;
double ddo, d, Fg, Fbo, Fb, F1, d1, F2, d2, d3, d4;
int i,w,v,Ipogr,Wpogr,Vpogr,Vpogr1,Wpogr1;

  Fgmin=0.5;
  Fgmax=1.0000000001;
  dFg=0.0001;
  Fo=0.0784613177339900;
  Fbmin=0.01999999999;
  Fbmax=0.04000000001;
  Fbomin=0.02999999999;
  Fomin=0.06999999999;
  ddo=0;

  i=1;
  Fg=Fgmin+(i-1)*dFg;
  while(Fg<=Fgmax){
            d=1;

            w=1;
            Fbo=Fg/w;
            while(Fbo>=Fbomin){
                     v=1;
                     Fb=Fg/v;
                     while(Fb>Fbmax){
                                v=v+1;
                                Fb=Fg/v;
                                    }
                     while(Fb>=Fbmin){
                                if(Fbo>=Fb) F1=Fbo-Fb;
                                           else F1=Fb-Fbo;
                                if(F1>=Fomin){
                                            if(F1>=Fo) d1=(F1-Fo)/Fo;
                                            if(F1<Fo) d1=(Fo-F1)/Fo;
                                              }
                                if(F1<Fomin) d1=1;
                                F2=Fbo+Fb;
                                if(F2>=Fomin){
                                            if(F2>=Fo) d2=(F2-Fo)/Fo;
                                            if(F2<Fo) d2=(Fo-F2)/Fo;
                                              }
                                if(F2<Fomin) d2=1;
                                d3=d2-d1;
                                if(d3>=0) d4=d1;
                                         else d4=d2;
                                if(d>=d4){
                                          d=d4;
                                          Wpogr1=W;
                                          Vpogr1=V;
                                          }
                                v=v+1;
                                Fb=Fg/v;
                                        }
                     w=w+1;
                     Fbo=Fg/w;
                                 }
            if(ddo<=d){
                       ddo=d;
                       Ipogr=i;
                       Vpogr=Vpogr1;
                       Wpogr=Wpogr1;
                      }
            i=i+1;
            Fg=Fgmin+(i-1)*dFg;
                   }
  PogrechnostEdit->Text=FloatToStr(ddo);
  ApogrEdit->Text=IntToStr(Ipogr);
  WpogrEdit->Text=IntToStr(Wpogr);
  VpogrEdit->Text=IntToStr(Vpogr);

}
//---------------------------------------------------------------------------
void __fastcall TForm1::RadioButton1Click(TObject *Sender)
{
if(RadioButton1->Checked)
        {
        str="rez1.txt";
        str2="zapisi1.dat";
        x01=0.0374999999999;
        x02=0.0425000000001;
        }
}
//---------------------------------------------------------------------------

void __fastcall TForm1::RadioButton2Click(TObject *Sender)
{
if(RadioButton2->Checked)
        {
        str="rez2.txt";
        str2="zapisi2.dat";
        x01=0.0249999999999;
        x02=0.0350000000001;
        }
}
//---------------------------------------------------------------------------

void __fastcall TForm1::RadioButton3Click(TObject *Sender)
{
if(RadioButton3->Checked)
        {
        str="rez3.txt";
        str2="zapisi3.dat";
        x01=0.0274999999999;
        x02=0.0325000000001;
        }
}
//---------------------------------------------------------------------------

void __fastcall TForm1::RadioButton4Click(TObject *Sender)
{
if(RadioButton4->Checked)
        {
        str="rez4.txt";
        str2="zapisi4.dat";
        x01=0.0299999999999;
        x02=0.0500000000001;
        }
}
//---------------------------------------------------------------------------

void __fastcall TForm1::RadioButton5Click(TObject *Sender)
{
if(RadioButton5->Checked)
        {
        str="rez5.txt";
        str2="zapisi5.dat";
        x01=0.0349999999999;
        x02=0.0450000000001;
        }
}
//---------------------------------------------------------------------------

void __fastcall TForm1::RadioButton6Click(TObject *Sender)
{
if(RadioButton6->Checked)
        {
        str="rez6.txt";
        str2="zapisi6.dat";
        x01=0.0199999999999;
        x02=0.0400000000001;
        }
}
//---------------------------------------------------------------------------

void __fastcall TForm1::Button3Click(TObject *Sender)//перезапускает программу
{
ShellExecute(0,0,"Project1.exe",0,0,SW_SHOW);        //Запускаем новую копию
Close();                                             //Закрываем старую
}
//---------------------------------------------------------------------------

void __fastcall TForm1::Button4Click(TObject *Sender)//вывод данных в листбокс
{
ListBox1->Items->Text = "";

if ((Fz=fopen(str2.c_str(),"rb"))==NULL)
        {
        ListBox1->Items->Text = "Not found";
        return;
        }
//---------проверка на пустой файл
ifstream h(str2.c_str());
if (h.is_open())
       {
        std::string str;
        std::getline(h, str);
        if (h.eof() && str.empty()){
                ListBox1->Items->Text = "Error";//если файл пуст выдает ошибку
                fclose(Fz);}
                else
                {
int i=0;
while(1)
        {
        if(fread(&Zap[i],size,1,Fz)==0) //считывает итый элемент в байтах и сравнивает с 0
        break;
        ListBox1->Items->Text = ListBox1->Items->Text + FloatToStr(Zap[i].s_nom) +
        "  " + FloatToStr(Zap[i].s_x) + "\n";
        Sleep(10);                      //шаг отрисовки от 0 до 1000
        Application->ProcessMessages(); //отрисовывает все изменения в форме
        i=i+1;
        }
fclose(Fz);
                }
        }
}
//---------------------------------------------------------------------------

void __fastcall TForm1::Button5Click(TObject *Sender)//создает пустой документ
{
if ((Fz=fopen(str2.c_str(),"wb"))==NULL)
        {
        return;
        }
fclose(Fz);
if ((Fs=fopen(File_Zap,"wb"))==NULL)
        {
        return;
        }
fclose(Fs);
ListBox1->Items->Text = "Create a new file 'zapisi.dat'";
}
//---------------------------------------------------------------------------

void __fastcall TForm1::Button6Click(TObject *Sender)//сортировка массива
{

int kol=0, i=0, j, k;

ListBox1->Items->Text = "";//очистка окна

Fs = fopen(File_Zap,"wb");

for(j=0;j<6;j++)
{
if(j==0) Fz = fopen("zapisi1.dat","rb");
if(j==1) Fz = fopen("zapisi2.dat","rb");
if(j==2) Fz = fopen("zapisi3.dat","rb");
if(j==3) Fz = fopen("zapisi4.dat","rb");
if(j==4) Fz = fopen("zapisi5.dat","rb");
if(j==5) Fz = fopen("zapisi6.dat","rb");
i=0;
while(1){
        if(fread(&Zap[i],size,1,Fz)==0) break;
        fwrite(&Zap[i],size,1,Fs);
        i=i+1;
        }
}

fclose(Fs);
fclose(Fz);

if ((Fs=fopen(File_Zap,"rb"))==NULL)
        {
        ListBox1->Items->Text = "Not found";
        return;
        }
//---------проверка на пустой файл
ifstream h("zapisi.dat");
     if (h.is_open())
        {
        std::string str;
        std::getline(h, str);
                if (h.eof() && str.empty()){
                        ListBox1->Items->Text = "Error";//если файл пуст выдает ошибку
                        fclose(Fs);}
                        else
                        {
i=0;
while(1){
        if(fread(&Zap[i],size,1,Fs)==0) break;
        kol++;
        i=i+1;
        }
//ListBox1->Items->Text = IntToStr(kol);
for(i=0; i<kol; i++)
   for(k=i+1; k<kol; k++)
       if ((Zap[k].s_x)<(Zap[i].s_x)) {
         p=Zap[k];          // Обмен Zap[k] и Zap[i]
         Zap[k]=Zap[i];
         Zap[i]=p;
       }
for(i=0; i<kol; i++)
ListBox1->Items->Text = ListBox1->Items->Text + FloatToStr(Zap[i].s_nom) +
"  " + FloatToStr(Zap[i].s_x) + "\n";
fclose(Fs);
                        }
        }
}
//---------------------------------------------------------------------------

void __fastcall TForm1::Button7Click(TObject *Sender)//сплайн выбранного интервала
{
int kol=0, i=0, kk;
//---------проверка на отсутствие файла
if ((Fz=fopen(str2.c_str(),"rb"))==NULL)
        {
        ListBox1->Items->Text = "Not found";
        return;
        }
//---------проверка на пустой файл
ifstream h(str2.c_str());
if (h.is_open())
       {
        std::string str;
        std::getline(h, str);
        if (h.eof() && str.empty())
                {
                ListBox1->Items->Text = "Error";//если файл пуст выдает ошибку
                Series1->Clear();
                Series2->Clear();
                Series3->Clear();
                Series4->Clear();
                Series5->Clear();
                fclose(Fz);
                }
                else
                {
ListBox1->Items->Text = "";
while(1) {
        if(fread(&Zap[i],size,1,Fz)==0) break;
        kol++;
        i=i+1;
        }
for(i=0; i<kol; i++)
   for(kk=i+1; kk<kol; kk++)
       if ((Zap[kk].s_x)<(Zap[i].s_x))
       {
         p=Zap[kk];          // Обмен Zap[k] и Zap[i]
         Zap[kk]=Zap[i];
         Zap[i]=p;
       }

double a[1000],b[1000],c[1000],y[1000],x[1000],
h[1000],d[1000],k[1000],l[1000],r[1000],s[1000];
int n=kol;

//------------Вывод X и Y
int j=0;
for(i=1; i<n; i++)
   {
   if((Zap[i].s_x)-(Zap[i-1].s_x)>=0.00001)
        {
        x[j]=Zap[i-1].s_x;
        y[j]=Zap[i-1].s_y;
        j=j+1;
        }
   }
n=j;

Series1->Clear();
Series2->Clear();
Series3->Clear();
Series4->Clear();
Series5->Clear();

fclose(Fz);

//------------Нахождение коэффициентов
 for(i=2; i<n; i++)  {
    k[1]=0;    
    l[1]=0;

    h[i-1]=x[i-1]-x[i-2];
    h[i]=x[i]-x[i-1];
 
    s[i]=2*(h[i]+h[i-1]);
 
    r[i]=3*((y[i]-y[i-1])/h[i]-(y[i-1]-y[i-2])/h[i-1]);
 
    k[i]=(r[i]-h[i-1]*k[i-1])/(s[i]-h[i-1]*l[i-1]);
 
    l[i]=h[i]/(s[i]-h[i-1]*l[i-1]);
    }

   c[n-1]=k[n-1];
   for(i=n-2; i>=2; i--)
   c[i]=k[i]-l[i]*c[i+1];

 
  for(i=1; i<n; i++)
  {
  h[i]=x[i]-x[i-1];
  a[i]=y[i-1];
  b[i]=(y[i]-y[i-1])/h[i]-h[i]*(2*c[i]+c[i+1])/3;
  d[i]=(c[i+1]-c[i])/(3*h[i]);
  }

i=1;
double x1=x[0];
double x2;
double y2=0;
j=0;
 
      do {
        do {
        y2=a[i]+b[i]*(x1-x[i-1])+c[i]*pow((x1-x[i-1]), 2)+d[i]*pow((x1-x[i-1]), 3);
        Series1->AddXY(x1, y2);
        x1=x1+0.0001;
        //---------------
                MinX[j]=x1;
                MinY[j]=y2;
                j++;
        //---------------
        x2=static_cast<double>(x1);
            } while (x2<x[i]);
                i++;
                x1=x[i-1];
         } while (i<n);

    for(i=0; i<n; i++)
    {
    Series2->AddXY(x[i],y[i]);
    Series5->AddXY(x[i],y[i]);
    }

int ColMin = 0;
for(i=0; i<j; i++)
   if(MinY[i]<MinY[i-1] && MinY[i]<MinY[i+1])
        {
        MinXX[ColMin]=MinX[i];
        MinYY[ColMin]=MinY[i];
        ColMin=ColMin+1;
        }
for(i=0; i<ColMin; i++)
    Series3->AddXY(MinXX[i],MinYY[i]);
                }
        }
}
//---------------------------------------------------------------------------

void __fastcall TForm1::Button8Click(TObject *Sender)
{
//---------Масштаб начало
double a1=0, b1=0, a1min=0.07, b1min=0;
if(ScaleX->Text!="") a1=StrToFloat(ScaleX->Text);  //максимальное значние по Х
if(ScaleXmin->Text!="") a1min=StrToFloat(ScaleXmin->Text);  //миимальное значние по Х
if(ScaleY->Text!="") b1=StrToFloat(ScaleY->Text);  //максимальное значние по У
if(ScaleYmin->Text!="") b1min=StrToFloat(ScaleYmin->Text);  //миимальное значние по Х

if(a1>0 && a1<=10000 && a1min>=0 && a1min<=10000)
        {
        Chart1->BottomAxis->Automatic=false;
        Chart1->BottomAxis->Maximum = a1;
        Chart1->BottomAxis->Minimum = a1min;
        }
if(b1>0 && b1<=10000 && b1min>=-10000 && b1min<=10000)
        {
        Chart1->LeftAxis->Automatic=false;
        Chart1->LeftAxis->Maximum = b1;
        Chart1->LeftAxis->Minimum = b1min;
        }
//---------Масштаб конец
}
//---------------------------------------------------------------------------

void __fastcall TForm1::Button9Click(TObject *Sender)//Нахождение общего сплайна
{
int kol=0, i=0, j=0, kk;
//---------проверка на отсутствие файла
if ((Fs=fopen(File_Zap,"rb"))==NULL)
        {
        ListBox1->Items->Text = "Not found";
        return;
        }
//---------проверка на пустой файл
ifstream h(File_Zap);
if (h.is_open())
       {
        std::string str;
        std::getline(h, str);
        if (h.eof() && str.empty()){
                ListBox1->Items->Text = "Error";//если файл пуст выдает ошибку
                fclose(Fs);}
                else
                {

ListBox1->Items->Text = "";
while(1){
        if(fread(&Zap[i],size,1,Fs)==0) break;
        kol++;
        i=i+1;
        }

for(i=0; i<kol; i++)
   for(kk=i+1; kk<kol; kk++)
       if ((Zap[kk].s_x)<(Zap[i].s_x))
       {
         p=Zap[kk];          // Обмен Zap[k] и Zap[i]
         Zap[kk]=Zap[i];
         Zap[i]=p;
       }

double a[1000],b[1000],c[1000],y[1000],x[1000],
h[1000],d[1000],k[1000],l[1000],r[1000],s[1000];
int n=kol;

//------------Вывод X и Y

for(i=1; i<n; i++)
   {
   if((Zap[i].s_x)-(Zap[i-1].s_x)>=0.00001)
        {
        x[j]=Zap[i-1].s_x;
        y[j]=Zap[i-1].s_y;
        j=j+1;
        }
   }
n=j;

Series1->Clear();
Series2->Clear();
Series3->Clear();
Series4->Clear();
Series5->Clear();

fclose(Fs);

//------------Нахождение коэффициентов
 for(i=2; i<n; i++)  {
    k[1]=0;    
    l[1]=0;

    h[i-1]=x[i-1]-x[i-2];
    h[i]=x[i]-x[i-1];
 
    s[i]=2*(h[i]+h[i-1]);
 
    r[i]=3*((y[i]-y[i-1])/h[i]-(y[i-1]-y[i-2])/h[i-1]);
 
    k[i]=(r[i]-h[i-1]*k[i-1])/(s[i]-h[i-1]*l[i-1]);
 
    l[i]=h[i]/(s[i]-h[i-1]*l[i-1]);
    }

   c[n-1]=k[n-1];
   for(i=n-2; i>=2; i--)
   c[i]=k[i]-l[i]*c[i+1];

 
  for(i=1; i<n; i++)
  {
  h[i]=x[i]-x[i-1];
  a[i]=y[i-1];
  b[i]=(y[i]-y[i-1])/h[i]-h[i]*(2*c[i]+c[i+1])/3;
  d[i]=(c[i+1]-c[i])/(3*h[i]);
  }

i=1;
double x1=x[0];
double x2;
double y2=0;
j=0;
 
      do {
        do {
        y2=a[i]+b[i]*(x1-x[i-1])+c[i]*pow((x1-x[i-1]), 2)+d[i]*pow((x1-x[i-1]), 3);
        Series1->AddXY(x1, y2);
        x1=x1+0.00001;
        //---------------
                MinX[j]=x1;
                MinY[j]=y2;
                j++;
        //---------------
        x2=static_cast<double>(x1);
            } while (x2<x[i]);
                i++;
                x1=x[i-1];
         } while (i<n);

    for(i=0; i<n; i++)
    {
    Series2->AddXY(x[i],y[i]);
    Series5->AddXY(x[i],y[i]);
    }

int ColMin = 0;
for(i=0; i<j; i++)
   if(MinY[i]<MinY[i-1] && MinY[i]<MinY[i+1])
        {
        MinXX[ColMin]=MinX[i];
        MinYY[ColMin]=MinY[i];
        ColMin=ColMin+1;
        }
for(i=0; i<ColMin; i++)
    Series3->AddXY(MinXX[i],MinYY[i]);
                }
        }
}
//---------------------------------------------------------------------------


